<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="kb.keyboard.warrior.dao.MemoDao">

	<select id="todoView"
		resultType="kb.keyboard.warrior.dto.TodoListDTO">
		SELECT todoid, userno, task, IFNULL(detail, '투두리스트에 대한 상세한 설명을 넣어놓는 곳입니다.') AS detail,  
		startdate, isdone, status, importance, progress, category, SUBSTRING(duedate, 1, 10) AS duedate
		, CASE 
			WHEN DATE(duedate) &lt; CURDATE() THEN 0
			WHEN DATE(duedate) = CURDATE() THEN 1 
	        WHEN DATE(duedate) &gt; CURDATE() THEN 2 
		END AS checkstatus	
		FROM todolist
		WHERE userno = #{param1} AND 
		status = 1
		ORDER BY duedate
	</select>


	<select id="memoView1"
		resultType="kb.keyboard.warrior.dto.MyMemoDTO">
		SELECT * FROM mymemo WHERE userno = #{userno} ORDER BY
		memoid
	</select>

	<select id="memoView2"
		resultType="kb.keyboard.warrior.dto.DeptMemoDTO">
		SELECT * FROM deptmemo WHERE deptno = #{deptno} ORDER BY
		memoid
	</select>

	<select id="noticeView"
		resultType="kb.keyboard.warrior.dto.NoticeDTO">
		SELECT * FROM notice n
		LEFT JOIN user u ON n.userno =
		u.userno
		WHERE u.deptno = #{param1}
		ORDER BY noticeid
	</select>

	<insert id="noticeWrite">
		INSERT INTO notice (title, content, color, userno,
		deptno)
		values (#{param1}, #{param2}, #{param3}, #{param4}, #{param5})
	</insert>

	<delete id="noticeDelete">
		DELETE FROM notice WHERE noticeid = #{param1}
	</delete>

	<insert id="mymemoWrite">
		INSERT INTO mymemo (userno, content) values
		(#{param1}, #{param2})
	</insert>

	<insert id="deptmemoWrite">
		INSERT INTO deptmemo (deptno, userno, content) values
		(#{param1}, #{param2}, #{param3})
	</insert>

	<delete id="mymemoDelete">
		DELETE FROM mymemo WHERE memoid = #{param1}
	</delete>

	<delete id="deptmemoDelete">
		DELETE FROM deptmemo WHERE memoid = #{param1}
	</delete>

	<insert id="todoWrite">
		INSERT INTO todolist (userno, task) values
		(#{param1}, #{param2})
	</insert>

	<update id="todoStatus">
		UPDATE todolist SET status = 0 where todoid =
		#{param1}
	</update>

	<!-- 공지사항 위치 정보를 업데이트하는 쿼리 -->
	<update id="updateNoticePosition">
		UPDATE notice
		SET positionX = #{positionX},
		positionY = #{positionY},
		zindex = #{zindex}
		WHERE noticeid = #{noticeid}
	</update>

	<!-- 공지사항 크기 정보를 업데이트하는 쿼리 -->
	<update id="updateNoticeSize">
		UPDATE notice
		SET width = #{width},
		height = #{height}
		WHERE noticeid = #{noticeid}
	</update>

	<!-- 최대 z-index 값을 조회하는 쿼리 -->
	<select id="getMaxZindex" resultType="int">
		SELECT MAX(zindex) FROM
		notice
	</select>



</mapper>